# Homework_02

# 1. create a list of random number of dicts (from 2 to 10)
# dict's random numbers of keys should be letter,
# dict's values should be a number (0-100),
# example: [{'a': 5, 'b': 7, 'g': 11}, {'a': 3, 'c': 35, 'g': 42}]

import random #import library for useing random function
import string #import library for working with strings

# generate a list of dictionaries
# n - number of dictionaries (list elements)
# m - number of elements in each dictionary
res_list = [({random.choice(string.ascii_lowercase): random.randint(0, 100) for m in range(random.randint (1, 26))}) for n in range(random.randint(2, 10))]

print(res_list)

# 2. get previously generated list of dicts and create one common dict:
# if dicts have same key, we will take max value, and rename key with dict number with max value
# if key is only in one dict - take it as is,
# example: {'a_1': 5, 'b': 7, 'c': 35, 'g_2': 42}

# checking res_list=[{'a':1, 'b':2, 'c':3}, {'a':1, 'b':2, 'c':3}, {'a':1, 'b':2, 'c':3}]

final_dict = {} # final dictionary for adding the result

for char in string.ascii_lowercase: # go through all letters in the alphabet
    temp_values={} # temporary dictionary for each letter with the number of dictionary and value for this key
    for i in enumerate(res_list): # circle through all dictionaries in the list
        if i[1].get(char):
            temp_values[char + '_' + str(i[0] + 1)] = i[1].get(char) # add number of dictionary for the letter and value for this key
    for key, value in temp_values.items():  # circle through temporary dictionary for each letter
        if len(temp_values)==0: # if letter doesn't exist in any dictionary
            break
        if len(temp_values)==1: # if letter exists only in one dictionary
            final_dict[str(key)[0]] = value # add t the key-value pair final_dict (key added without number of dictionary)
        if len(temp_values)>1:
            if value==max(temp_values.values()):
                final_dict[key] = max(temp_values.values()) # add the key-value pair in final_dict (key added with the number of dictionary)
                break

print (final_dict ) # print the result
